
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # kubernetes_deployment.nginx-deployment[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_deployment" "nginx-deployment" {
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m wait_for_rollout = true

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "app" = "nginx"
            }
          [32m+[0m[0m name             = "my-cool-deployment"
          [32m+[0m[0m namespace        = "my-fancy-namespace"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m spec {
          [32m+[0m[0m min_ready_seconds         = 0
          [32m+[0m[0m paused                    = false
          [32m+[0m[0m progress_deadline_seconds = 600
          [32m+[0m[0m replicas                  = (known after apply)
          [32m+[0m[0m revision_history_limit    = 10

          [32m+[0m[0m selector {
              [32m+[0m[0m match_labels = {
                  [32m+[0m[0m "app" = "nginx"
                }
            }

          [32m+[0m[0m strategy (known after apply)

          [32m+[0m[0m template {
              [32m+[0m[0m metadata {
                  [32m+[0m[0m generation       = (known after apply)
                  [32m+[0m[0m labels           = {
                      [32m+[0m[0m "app" = "nginx"
                    }
                  [32m+[0m[0m name             = (known after apply)
                  [32m+[0m[0m resource_version = (known after apply)
                  [32m+[0m[0m uid              = (known after apply)
                }
              [32m+[0m[0m spec {
                  [32m+[0m[0m automount_service_account_token  = true
                  [32m+[0m[0m dns_policy                       = "ClusterFirst"
                  [32m+[0m[0m enable_service_links             = true
                  [32m+[0m[0m host_ipc                         = false
                  [32m+[0m[0m host_network                     = false
                  [32m+[0m[0m host_pid                         = false
                  [32m+[0m[0m hostname                         = (known after apply)
                  [32m+[0m[0m node_name                        = (known after apply)
                  [32m+[0m[0m restart_policy                   = "Always"
                  [32m+[0m[0m scheduler_name                   = (known after apply)
                  [32m+[0m[0m service_account_name             = (known after apply)
                  [32m+[0m[0m share_process_namespace          = false
                  [32m+[0m[0m termination_grace_period_seconds = 30

                  [32m+[0m[0m container {
                      [32m+[0m[0m image                      = "nginx:1.14.2"
                      [32m+[0m[0m image_pull_policy          = (known after apply)
                      [32m+[0m[0m name                       = "nginx"
                      [32m+[0m[0m stdin                      = false
                      [32m+[0m[0m stdin_once                 = false
                      [32m+[0m[0m termination_message_path   = "/dev/termination-log"
                      [32m+[0m[0m termination_message_policy = (known after apply)
                      [32m+[0m[0m tty                        = false

                      [32m+[0m[0m port {
                          [32m+[0m[0m container_port = 9988
                          [32m+[0m[0m protocol       = "TCP"
                        }

                      [32m+[0m[0m resources (known after apply)
                    }

                  [32m+[0m[0m image_pull_secrets (known after apply)

                  [32m+[0m[0m readiness_gate (known after apply)
                }
            }
        }
    }

[1m  # kubernetes_ingress_v1.nginx-ingress[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_ingress_v1" "nginx-ingress" {
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m status = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m name             = "ingress"
          [32m+[0m[0m namespace        = "my-fancy-namespace"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m spec {
          [32m+[0m[0m ingress_class_name = (known after apply)

          [32m+[0m[0m rule {
              [32m+[0m[0m host = "backend.io"

              [32m+[0m[0m http {
                  [32m+[0m[0m path {
                      [32m+[0m[0m path      = "/*"
                      [32m+[0m[0m path_type = "ImplementationSpecific"

                      [32m+[0m[0m backend {
                          [32m+[0m[0m service {
                              [32m+[0m[0m name = "ingress-service"

                              [32m+[0m[0m port {
                                  [32m+[0m[0m number = 9988
                                }
                            }
                        }
                    }
                }
            }
        }
    }

[1m  # kubernetes_namespace.nginx-ns[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_namespace" "nginx-ns" {
      [32m+[0m[0m id                               = (known after apply)
      [32m+[0m[0m wait_for_default_service_account = false

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m name             = "my-fancy-namespace"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }
    }

[1m  # kubernetes_service.ingress-service[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_service" "ingress-service" {
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m status                 = (known after apply)
      [32m+[0m[0m wait_for_load_balancer = true

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m name             = "ingress-service"
          [32m+[0m[0m namespace        = "default"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m spec {
          [32m+[0m[0m allocate_load_balancer_node_ports = true
          [32m+[0m[0m cluster_ip                        = (known after apply)
          [32m+[0m[0m cluster_ips                       = (known after apply)
          [32m+[0m[0m external_traffic_policy           = (known after apply)
          [32m+[0m[0m health_check_node_port            = (known after apply)
          [32m+[0m[0m internal_traffic_policy           = (known after apply)
          [32m+[0m[0m ip_families                       = (known after apply)
          [32m+[0m[0m ip_family_policy                  = (known after apply)
          [32m+[0m[0m publish_not_ready_addresses       = false
          [32m+[0m[0m selector                          = {
              [32m+[0m[0m "app" = "nginx"
            }
          [32m+[0m[0m session_affinity                  = "None"
          [32m+[0m[0m type                              = "ClusterIP"

          [32m+[0m[0m port {
              [32m+[0m[0m node_port   = (known after apply)
              [32m+[0m[0m port        = 9988
              [32m+[0m[0m protocol    = "TCP"
              [32m+[0m[0m target_port = "9988"
            }

          [32m+[0m[0m session_affinity_config (known after apply)
        }
    }

[1mPlan:[0m 4 to add, 0 to change, 0 to destroy.
[0m[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
